@using demo_ver1.HubClients
@using demo_ver1.Share.Dtos

@inject MapHubClients MapHub
@inject NotificationService noticeService 


<Spin Spinning=@IsLoading>
    <div class="d-flex flex-row flex-wrap">
        @foreach (var resource in AreaMapImages)
        {
            <div class="d-flex flex-column p-3 @(!string.IsNullOrEmpty(resource.Name) && resource.Name.Equals(ImageFile) ? "bg-primary" : "bg-white")"
                 style="justify-content: center">
                <Image Width="150px" Src=@resource.FileUrl />
                <label style="width: 150px; word-break: break-all;"
                       @onclick="@(e => SelectImageId(resource.Name))">
                    @resource.Name
                </label>
            </div>
        }
    </div>
</Spin>

@code {
    [Parameter]
    public Guid MapId { get; set; }

    [Parameter]
    public string? ImageFile { get; set; }

    [Parameter]
    public EventCallback<string> ImageFileChanged { get; set; }

    private bool IsLoading { get; set; } = true;
    private List<AreaMapResourceDto> AreaMapImages { get; } = new List<AreaMapResourceDto>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
		await MapHub.StartAsync();
        AreaMapImages.AddRange(await MapHub.GetMapResourceFiles(MapId, "", "image/"));
        IsLoading = false;
    }

    private async Task SelectImageId(string? fileName)
    {
        ImageFile = fileName;
        StateHasChanged();
        await ImageFileChanged.InvokeAsync(ImageFile);
    }

}
