@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationState
@inject NavigationManager nav



<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">RobotNet</a>
    <button class="navbar-toggler" @onclick="e => { collapseNavMenu = !collapseNavMenu;}">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

   
<AuthorizeView>
    <Authorized>
        <div class="@NavMenuCssClass" @onclick="e => { collapseNavMenu = !collapseNavMenu;}">
            <ul class="nav flex-column">
                @foreach (var navItem in NavList)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="@navItem.Route">
                            <span class="mdi @navItem.Icon" aria-hidden="true" /> @navItem.Label
                        </NavLink>
                    </li>
                }
            </ul>
        </div>
        <div class="flex-grow-1" />
        <div class="d-flex flex-row align-items-center m-1">
            <Avatar Class="d-flex align-items-center justify-content-center" Icon="user" />
            <span class="text-white ml-1 mr-2 flex-grow-1" style="font-size: 12px;">
                @context.User.Identity.Name
            </span>
            <div class="flex-grow-1" />
            <Dropdown Placement="@Placement.TopRight" Trigger="@(new Trigger[] { Trigger.Click })">
                <Overlay>
                    <Menu>
                        <MenuItem OnClick="Logout">
                            Logout
                        </MenuItem>
                    </Menu>
                </Overlay>
                <ChildContent>
                    <span class="mdi mdi-menu-up text-white" />
                </ChildContent>
            </Dropdown>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="w-100 h-100 m-1 d-flex align-items-center justify-content-center">
            <Button Class="mx-3" Type="@ButtonType.Primary" OnClick="Login">Login</Button>
        </div>
    </NotAuthorized>
</AuthorizeView>
    
   



@code {
     public class NavMenuItem
    {
        public string? Route { get; init; }
        public string? Icon { get; init; }
        public string? Label { get; init; }
        
    }

    public NavMenuItem[] NavList = new NavMenuItem[]
        {
        new (){ Route="/maps", Icon="mdi-map-legend", Label="Maps", },
        new (){ Route="/robot", Icon="mdi-forklift", Label="Robots", },
        new (){ Route="/version", Icon="mdi-golf-cart", Label="Robot Versions", },
        new (){ Route="/connect" ,Icon="mdi-signal-variant",Label="Connecting",},

        };
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private async Task Logout()
    {
        await SignOutManager.SetSignOutState();
        nav.NavigateTo($"authentication/logout?returnUrl={nav.BaseUri}");
    }

    private void Login()
    {
        nav.NavigateTo($"authentication/login?returnUrl={nav.Uri}");
    }
}
